#!/usr/bin/python
import sys
import os


def generate_bb_result_file(raw_file_path):
    log_file = open(raw_file_path, 'r')
    with open('bb_power_test_result.csv', 'w') as result_file:
        for line in log_file:
            datas = line.split(';')
            benchmark_phase = datas[1]
            stream_number = datas[2]
            query_number = datas[3]
            query_time = datas[9]
            query_result = datas[12]
            if benchmark_phase == 'benchmarkPhase' or benchmark_phase == 'POWER_TEST' or \
                    benchmark_phase == 'THROUGHPUT_TEST_1':
                if benchmark_phase == 'THROUGHPUT_TEST_1':
                    if len(query_number) == 0 and len(stream_number) > 0:
                        result_file.write(benchmark_phase + ',' + stream_number + ',' + query_time
                            + ',' + query_result + '\n')
                elif len(query_number) > 0:
                    result_file.write(benchmark_phase + ',' + query_number + ',' + query_time
                        + ',' + query_result + '\n')
    log_file.close()


def usage():
    print("Usage: scripts/data_process_tool.py collect_bb <file_path> /n")
    print("       <file_path> is generated by TPCx-BB, eg, BigBenchTimes.csv /n")
    exit(1)


if __name__ == '__main__':
    args = sys.argv
    if len(args) < 3:
        usage()
    action = args[1]
    option = args[2]

    if action == "collect_bb":
        result_file = os.path.abspath(option)
        generate_bb_result_file(result_file)
    else:
        usage()
